---
layout: post
title:  "0x07 - lwip musings"
date:   2024-09-07 20:39:00 +0100
categories: lwip
---

I've been using lwip's raw TCP stack in anger over the past year or so and had idea to document some useful information I've discovered when using it. I've mostly been using the official documentation[^1] as well as a fandom.com[^2] page I came across.

# What the hell is LWIP?

It stands for _Lightweight Internet Protocol_ and is a minimal TCP/IP stack designed for use on embedded platforms[^1]. I've mostly been using the raw TCP functionality for sending and receiving MQTT data to/from a broker on a local network using a _Raspberry Pi Pico W_.

# Initialising
Initialising the raw TCP stack begins with a call to `tcp_new()` which creates a new instance of the TCP PCB (protocol control block). I found that this function would fail if I hadn't properly freed the previous instances when 
attempting to restart the connection. Presumably the other PCB's were still being handled by lwIP and it had ran out of memory.

```
static struct tcp_pcb * tcp_pcb = tcp_new();
if(tcp_pcb == NULL)
{
    /* Something iffy with memory */
    assert(false);
}
```


# References
[^1]: lwIP - A Lightweight TCP/IP stack - Summary [link](https://savannah.nongnu.org/projects/lwip/)
[^2]: Fandom.com - lwIP wiki [link](https://lwip.fandom.com/wiki/Raw/TCP)
